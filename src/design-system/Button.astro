---
import { cva, type VariantProps } from "class-variance-authority";

const buttonVariants = cva(
  [
    "inline-flex",
    "items-center",
    "justify-center",
    "gap-2",
    "leading-none",
    "px-6",
    "py-4",
    "whitespace-nowrap",
  ],
  {
    variants: {
      variant: {
        contained: null,
        text: null,
      },

      size: {
        medium: [
          "text-base",
          "leading-6",
          "[&>svg]:w-[20px]",
          "[&>svg]:h-[20px]",
        ],
        large: [
          "text-2xl",
          "leading-8",
          "[&>svg]:w-[25px]",
          "[&>svg]:h-[25px]",
        ],
      },

      color: {
        primary: null,
      },

      selected: {
        true: ["text-primary-hover-text bg-primary-ghost-bg"],
      },
    },

    compoundVariants: [
      {
        variant: "contained",
        color: "primary",
        class: [
          "text-primary-contrast-text bg-primary-main-bg",
          "hover:bg-primary-hover-bg",
        ],
      },
      {
        variant: "text",
        color: "primary",
        class: [
          "text-primary-main-text",
          "hover:text-primary-hover-text hover:bg-primary-ghost-bg",
        ],
      },
    ],
  }
);

interface Props extends VariantProps<typeof buttonVariants> {
  disabled?: boolean;
  href?: string;
  external?: boolean;
}

const {
  variant = "contained",
  color = "primary",
  size = "medium",
  href,
  external,
  selected,
} = Astro.props;
---

<a
  class={buttonVariants({ variant, size, color, selected })}
  href={href}
  target={external ? "_blank" : undefined}
  rel={external ? "noopener noreferrer" : undefined}
>
  <slot />
</a>
